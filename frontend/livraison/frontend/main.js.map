{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/customer.component.ts","webpack:///./src/app/component/customers.component.ts","webpack:///./src/app/component/edit-customer.component.ts","webpack:///./src/app/component/error.component.ts","webpack:///./src/app/component/find-customer.component.ts","webpack:///./src/app/component/home.component.ts","webpack:///./src/app/component/navbar.component.ts","webpack:///./src/app/component/new-customer.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<navbar></navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {CustomersComponent} from './component/customers.component';\nimport {FindCustomerComponent} from './component/find-customer.component';\nimport {CustomerComponent} from './component/customer.component';\nimport {EditCustomerComponent} from './component/edit-customer.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {NavbarComponent} from './component/navbar.component';\nimport {ErrorComponent} from './component/error.component';\nimport {HomeComponent} from './component/home.component';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from \"@angular/forms\";\nimport {NewCustomerComponent} from \"./component/new-customer.component\";\n\nconst appRoutes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'customers', component: CustomersComponent},\n  {path: 'customer/:id', component: CustomerComponent},\n  {path: 'find-customer', component: FindCustomerComponent},\n  {path: 'edit-customer/:id', component: EditCustomerComponent},\n  {path: 'new-customer', component: NewCustomerComponent},\n  {path: '**', component: ErrorComponent},\n  {path: 'error', component: ErrorComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomersComponent,\n    FindCustomerComponent,\n    CustomerComponent,\n    EditCustomerComponent,\n    NavbarComponent,\n    ErrorComponent,\n    HomeComponent,\n    NewCustomerComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Customer} from \"../model/Customer\";\n\n@Component({\n  selector: `customer`,\n  template: `\n    <div class=\"container-fluid\" *ngIf=\"!isLoading\">\n      <div class=\"container xd-container\">\n\n        <h2>Customer Information</h2>\n\n\n        <table class=\"table table-striped\">\n          <tbody>\n          <tr>\n            <th>Name</th>\n            <td><b>{{client.firstName}} {{client.lastName}}</b></td>\n          </tr>\n          <tr>\n            <th>Address</th>\n            <td>{{client.address}}</td>\n          </tr>\n          <tr>\n            <th>City</th>\n            <td>{{client.city}}</td>\n          </tr>\n          <tr>\n            <th>Telephone</th>\n            <td>{{client.telephone}}</td>\n          </tr>\n          </tbody>\n        </table>\n\n        <a (click)=\"editCustomer()\" class=\"btn btn-default\">Edit Customer</a>\n\n        <a (click)=\"addNewCard()\" class=\"btn btn-default\">Add New Card</a>\n\n        <br>\n        <br>\n        <br>\n        <h2>Cards and Payments</h2>\n\n        <table class=\"table table-striped\">\n          <tbody>\n          <tr *ngFor=\"let card of client.cards\">\n            <td valign=\"top\">\n              <dl class=\"dl-horizontal\">\n                <dt>Name</dt>\n                <dd>{{card.name}}</dd>\n                <dt>Birth Date</dt>\n                <dd>{{card.birthDate}}</dd>\n                <dt>Type</dt>\n                <dd>{{card.type.name}}</dd>\n              </dl>\n            </td>\n            <td valign=\"top\">\n              <table class=\"table-condensed\">\n                <thead>\n                <tr>\n                  <th>Payment Date</th>\n                  <th>Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                  <td>2015-09-04</td>\n                  <td>Monoprix</td>\n                </tr>\n                <tr>\n                  <td>\n                    <a href=\"/containerbank/component/1/cards/1/edit\">Edit Card</a>\n                  </td>\n                  <td>\n                    <a href=\"/containerbank/component/1/cards/1/payments/new\">Add Payment</a>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </td>\n          </tr>\n\n          </tbody>\n        </table>\n\n      </div>\n    </div>`\n})\nexport class CustomerComponent implements OnInit {\n\n  id: string;\n  isLoading: boolean = true;\n  client: Customer;\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.http.get(`/api/customers/${this.id}`).subscribe((value: Customer) => {\n      console.info(value);\n      this.isLoading = false;\n      this.client = value;\n    });\n  }\n\n  editCustomer() {\n    this.router.navigate([`/edit-customer/${this.id}`]);\n  }\n\n  addNewCard() {\n    // TODO\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Customer} from '../model/Customer';\n\n@Component({\n  selector: `customers`,\n  template: `\n    <div class=\"container-fluid\">\n      <div class=\"container xd-container\">\n\n        <h2>Customers</h2>\n\n        <table id=\"customersTable\" class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th style=\"width: 150px;\">Name</th>\n            <th style=\"width: 200px;\">Address</th>\n            <th>City</th>\n            <th style=\"width: 120px\">Telephone</th>\n            <th>Cards</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let customer of customers\">\n            <td>\n              <a routerLink=\"/customer/{{customer?.id}}\">{{customer.lastName}}</a>\n            </td>\n            <td>\n              {{customer?.address}}\n            </td>\n            <td>\n              {{customer?.city}}\n            </td>\n            <td>\n              {{customer?.telephone}}\n            </td>\n            <td >\n              <div *ngFor=\"let card of customer.cards\">{{card?.name}} /</div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>`\n})\nexport class CustomersComponent implements OnInit {\n\n  customers: Customer[];\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.http.get('/api/customers').subscribe((data: Customer[]) => this.customers = data);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Customer} from \"../model/Customer\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: `edit-customer`,\n  template: `\n    <div class=\"container-fluid\" *ngIf=\"!isLoading\">\n      <div class=\"container xd-container\">\n\n        <h2>\n          Customer\n        </h2>\n        <form id=\"add-customer-form\" class=\"form-horizontal\">\n          <div class=\"form-group has-feedback\">\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">First Name</label>\n    \n              <div class=\"col-sm-10\">\n                <input id=\"firstName\" name=\"firstName\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.firstName\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Last Name</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"lastName\" name=\"lastName\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.lastName\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Address</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"address\" name=\"address\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.address\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">City</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"city\" name=\"city\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.city\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Telephone</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"telephone\" name=\"telephone\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.telephone\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n          </div>\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n              <button class=\"btn btn-default\" (click)=\"updateCustomer()\">Update Customer</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>`\n})\nexport class EditCustomerComponent implements OnInit {\n\n  id: string;\n  isLoading: boolean = true;\n  client: Customer;\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.http.get(`http://localhost:8090/api/customers/${this.id}`).subscribe((value: Customer) => {\n      console.info(value);\n      this.isLoading = false;\n      this.client = value;\n    });\n  }\n\n  updateCustomer() {\n    console.info(this.client);\n  }\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: `error`,\n  template: `<div class=\"container xd-container\"><h2>Something happened...</h2>\n  <p>Expected: controller used to showcase what happens when an exception is thrown</p>\n</div>`\n})\nexport class ErrorComponent {\n\n}\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: `find-customer`,\n  template: `\n    <div class=\"container-fluid\">\n      <div class=\"container xd-container\">\n\n        <h2>Find Customers</h2>\n        <form id=\"search-customer-form\" class=\"form-horizontal\">\n          <div class=\"form-group\">\n            <div class=\"control-group\" id=\"lastName\">\n              <label class=\"col-sm-2 control-label\">Last name </label>\n              <div class=\"col-sm-10\">\n                <input id=\"lastName\" name=\"lastName\" class=\"form-control\" value=\"\" size=\"30\" maxlength=\"80\"\n                       type=\"text\"><span class=\"help-inline\"></span>\n\n              </div>\n\n            </div>\n\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n              <button (click)=\"goToCustomers()\" class=\"btn btn-default\">Find Customer</button>\n            </div>\n          </div>\n        </form>\n        <br>\n        <a class=\"btn btn-default\" href=\"/containerbank/customers/new\">Add Customer</a>\n      </div>\n\n    </div>`\n})\nexport class FindCustomerComponent {\n\n  constructor(private router: Router) {\n  }\n\n  goToCustomers() {\n    this.router.navigate([\"/customers\"]);\n  }\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: `home`,\n  template: `<p>Home !</p>`\n})\nexport class HomeComponent {\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: `navbar`,\n  template: `\n    <nav class=\"navbar navbar-default\" role=\"navigation\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <a class=\"navbar-brand\" href=\"/containerbank/\"><span></span></a>\n        </div>\n        <div class=\"navbar-collapse\" id=\"main-navbar\">\n          <ul class=\"nav navbar-nav navbar-right\">\n\n\n            <li class=\"active\">\n              <a routerLink=\"/\" title=\"home page\">\n\n                <span class=\"glyphicon glyphicon-home\" aria-hidden=\"true\"></span>\n                <span>Home</span>\n\n              </a>\n            </li>\n\n\n            <li class=\"\">\n              <a routerLink=\"/find-customer\" title=\"find customer\">\n\n                <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n                <span>Find customer</span>\n\n              </a>\n            </li>\n\n\n            <li class=\"\">\n              <a routerLink=\"/advisors\" title=\"advisors\">\n\n                <span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span>\n                <span>Advisors</span>\n\n              </a>\n            </li>\n\n\n            <li class=\"\">\n              <a routerLink=\"/error\" title=\"trigger a RuntimeException to see how it is handled\">\n\n                <span class=\"glyphicon glyphicon-warning-sign\" aria-hidden=\"true\"></span>\n                <span>Error</span>\n\n              </a>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    </nav>`\n})\nexport class NavbarComponent {\n\n}\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: `new-customer`,\n  template: `\n    <div class=\"container-fluid\">\n      <div class=\"container xd-container\">\n\n        <h2>\n          New Customer\n        </h2>\n        <form id=\"add-customer-form\" class=\"form-horizontal\" action=\"/containerbank/customers/new\" method=\"post\">\n          <div class=\"form-group has-feedback\">\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">First Name</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"firstName\" name=\"firstName\" class=\"form-control\" value=\"\" type=\"text\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Last Name</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"lastName\" name=\"lastName\" class=\"form-control\" value=\"\" type=\"text\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Address</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"address\" name=\"address\" class=\"form-control\" value=\"\" type=\"text\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">City</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"city\" name=\"city\" class=\"form-control\" value=\"\" type=\"text\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Telephone</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"telephone\" name=\"telephone\" class=\"form-control\" value=\"\" type=\"text\">\n\n\n              </div>\n            </div>\n\n          </div>\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n              <button class=\"btn btn-default\" type=\"submit\">Add Customer</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>`\n})\nexport class NewCustomerComponent {\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}