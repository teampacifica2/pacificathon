{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/advisors.component.ts","webpack:///./src/app/component/customer.component.ts","webpack:///./src/app/component/customers.component.ts","webpack:///./src/app/component/edit-customer.component.ts","webpack:///./src/app/component/error.component.ts","webpack:///./src/app/component/find-customer.component.ts","webpack:///./src/app/component/home.component.ts","webpack:///./src/app/component/navbar.component.ts","webpack:///./src/app/component/new-customer.component.ts","webpack:///./src/app/domain-name.ts","webpack:///./src/app/model/Customer.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<navbar></navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {CustomersComponent} from './component/customers.component';\nimport {FindCustomerComponent} from './component/find-customer.component';\nimport {CustomerComponent} from './component/customer.component';\nimport {EditCustomerComponent} from './component/edit-customer.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {NavbarComponent} from './component/navbar.component';\nimport {ErrorComponent} from './component/error.component';\nimport {HomeComponent} from './component/home.component';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from \"@angular/forms\";\nimport {NewCustomerComponent} from \"./component/new-customer.component\";\nimport {AdvisorsComponent} from \"./component/advisors.component\";\n\nconst appRoutes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'customers', component: CustomersComponent},\n  {path: 'customers/:lastName', component: CustomersComponent},\n  {path: 'customer/:id', component: CustomerComponent},\n  {path: 'find-customer', component: FindCustomerComponent},\n  {path: 'edit-customer/:id', component: EditCustomerComponent},\n  {path: 'new-customer', component: NewCustomerComponent},\n  {path: 'advisors', component: AdvisorsComponent},\n  {path: '**', component: HomeComponent},\n  {path: 'error', component: ErrorComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomersComponent,\n    FindCustomerComponent,\n    CustomerComponent,\n    EditCustomerComponent,\n    NavbarComponent,\n    ErrorComponent,\n    HomeComponent,\n    NewCustomerComponent,\n    AdvisorsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from \"@angular/core\";\nimport {Advisor} from \"../model/Advisor\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {domainName} from \"../domain-name\";\n\n@Component({\n  selector: \"advisors\",\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-uppercase text-secondary mb-0\">Advisors</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <div class=\"container xd-container\" *ngIf=\"!isLoading\">\n      <table id=\"advisorsTable\" class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th>Name</th>\n          <th>Specialties</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let advisor of advisors\">\n          <td>{{advisor.firstName}} {{advisor.lastName}}</td>\n          <td *ngIf=\"advisor.specialties.length === 0\">none</td>\n          <td *ngIf=\"advisor.specialties.length !== 0\">{{advisor.specialties[0].name}}</td>\n        </tr>\n        </tbody>\n      </table>\n\n      <table class=\"table-buttons\">\n        <tbody>\n        <tr>\n          <td>\n            <a (click)=\"viewAsXml()\">View as XML</a>\n          </td>\n          <td>\n            <a (click)=\"viewAsJson()\">View as JSON</a>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  `\n})\nexport class AdvisorsComponent implements OnInit {\n\n  isLoading: boolean = true;\n  advisors: Array<Advisor>;\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.http.get(`${domainName}/api/advisors`).subscribe((values: Array<Advisor>) => {\n      this.isLoading = false;\n      this.advisors = values;\n    })\n  }\n\n  viewAsXml() {\n    window.open('/api/advisors');\n  }\n\n  viewAsJson() {\n    window.open('/api/advisors');\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Customer} from \"../model/Customer\";\nimport {domainName} from \"../domain-name\";\n\n@Component({\n  selector: `customer`,\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-uppercase text-secondary mb-0\">Customer Information</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <div class=\"container-fluid\" *ngIf=\"!isLoading\">\n      <div class=\"container xd-container\">\n        <table class=\"table table-striped\">\n          <tbody>\n          <tr>\n            <th>Name</th>\n            <td><b>{{client.firstName}} {{client.lastName}}</b></td>\n          </tr>\n          <tr>\n            <th>Address</th>\n            <td>{{client.address}}</td>\n          </tr>\n          <tr>\n            <th>City</th>\n            <td>{{client.city}}</td>\n          </tr>\n          <tr>\n            <th>Telephone</th>\n            <td>{{client.telephone}}</td>\n          </tr>\n          </tbody>\n        </table>\n\n        <a (click)=\"editCustomer()\" class=\"btn btn-default\">Edit Customer</a>\n\n        <a (click)=\"addNewCard()\" class=\"btn btn-default\">Add New Card</a>\n\n        <br>\n        <br>\n        <br>\n        <h2>Cards and Payments</h2>\n\n        <table class=\"table table-striped\">\n          <tbody>\n          <tr *ngFor=\"let card of client.cards\">\n            <td valign=\"top\">\n              <dl class=\"dl-horizontal\">\n                <dt>Name</dt>\n                <dd>{{card.name}}</dd>\n                <dt>Birth Date</dt>\n                <dd>{{card.birthDate}}</dd>\n                <dt>Type</dt>\n                <dd>{{card.type.name}}</dd>\n              </dl>\n            </td>\n            <td valign=\"top\">\n              <table class=\"table-condensed\">\n                <thead>\n                <tr>\n                  <th>Payment Date</th>\n                  <th>Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                  <td>2015-09-04</td>\n                  <td>Monoprix</td>\n                </tr>\n                <tr>\n                  <td>\n                    <a (click)=\"editCard()\">Edit Card</a>\n                  </td>\n                  <td>\n                    <a (click)=\"addPayment()\">Add Payment</a>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </td>\n          </tr>\n\n          </tbody>\n        </table>\n\n      </div>\n    </div>`\n})\nexport class CustomerComponent implements OnInit {\n\n  id: string;\n  isLoading: boolean = true;\n  client: Customer;\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.http.get(`${domainName}/api/customers/${this.id}`).subscribe((value: Customer) => {\n      console.info(value);\n      this.isLoading = false;\n      this.client = value;\n    });\n  }\n\n  editCustomer() {\n    this.router.navigate([`/edit-customer/${this.id}`]);\n  }\n\n  addNewCard() {\n    // TODO\n  }\n\n  editCard() {\n    // TODO\n  }\n\n  addPayment() {\n    // TODO\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Customer} from '../model/Customer';\nimport {domainName} from \"../domain-name\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: `customers`,\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-uppercase text-secondary mb-0\">Customers</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <div class=\"container-fluid\">\n      <div class=\"container xd-container\">\n\n        <table id=\"customersTable\" class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th style=\"width: 150px;\">Name</th>\n            <th style=\"width: 200px;\">Address</th>\n            <th>City</th>\n            <th style=\"width: 120px\">Telephone</th>\n            <th>Cards</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let customer of customers\">\n            <td>\n              <a routerLink=\"/customer/{{customer?.id}}\">{{customer.lastName}}</a>\n            </td>\n            <td>\n              {{customer?.address}}\n            </td>\n            <td>\n              {{customer?.city}}\n            </td>\n            <td>\n              {{customer?.telephone}}\n            </td>\n            <td>\n              <div *ngFor=\"let card of customer.cards\">{{card?.name}} /</div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>`\n})\nexport class CustomersComponent implements OnInit {\n\n  customers: Customer[];\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    const searchName: string = this.route.snapshot.paramMap.get('lastName');\n    console.info(searchName);\n    if (searchName !== undefined && searchName !== \"\" && searchName !== null) {\n      this.http.get(`${domainName}/api/customers/_search?name=${searchName}`).subscribe((data: Customer[]) => this.customers = data);\n    } else {\n      this.http.get(`${domainName}/api/customers`).subscribe((data: Customer[]) => this.customers = data);\n    }\n\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Customer} from \"../model/Customer\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {domainName} from \"../domain-name\";\n\n@Component({\n  selector: `edit-customer`,\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-uppercase text-secondary mb-0\">Customer</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <div class=\"container-fluid\" *ngIf=\"!isLoading\">\n      <div class=\"container xd-container\">\n        <form id=\"add-customer-form\" class=\"form-horizontal\">\n          <div class=\"form-group has-feedback\">\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">First Name</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"firstName\" name=\"firstName\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.firstName\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Last Name</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"lastName\" name=\"lastName\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.lastName\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Address</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"address\" name=\"address\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.address\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">City</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"city\" name=\"city\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.city\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Telephone</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"telephone\" name=\"telephone\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.telephone\">\n\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n\n\n              </div>\n            </div>\n\n          </div>\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n              <button class=\"btn btn-default\" (click)=\"updateCustomer()\">Update Customer</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>`\n})\nexport class EditCustomerComponent implements OnInit {\n\n  id: string;\n  isLoading: boolean = true;\n  client: Customer;\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.http.get(`${domainName}/api/customers/${this.id}`).subscribe((value: Customer) => {\n      this.isLoading = false;\n      this.client = value;\n    });\n  }\n\n  updateCustomer() {\n    console.info(this.client);\n    this.http.post(`${domainName}/api/customers/${this.client.id}/edit`, this.client).subscribe(() => this.router.navigate(['/customers']));\n  }\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n\n  selector: `error`,\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-uppercase text-secondary mb-0\">Error !</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <div class=\"container xd-container\"><h2>Something happened...</h2>\n  <p>Expected: controller used to showcase what happens when an exception is thrown</p>\n</div>`\n})\nexport class ErrorComponent {\n\n}\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: `find-customer`,\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-uppercase text-secondary mb-0\">Find Customers</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n                <form id=\"search-customer-form\" class=\"form-horizontal\">\n                  <div class=\"form-group\">\n                    <div class=\"control-group\" id=\"lastName\">\n                      <label class=\"col-sm-2 control-label\">Last name </label>\n                        <input id=\"lastName\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"searchName\" size=\"30\" maxlength=\"80\"\n                               type=\"text\"><span class=\"help-inline\"></span>\n                    </div>\n                  </div>\n                  <div class=\"form-group\">\n                      <button (click)=\"goToCustomers()\" class=\"btn btn-primary btn-lg rounded-pill\">Find Customer</button>\n                  </div>\n                </form>\n                <br>\n                <a class=\"btn btn-primary btn-lg rounded-pill\" (click)=\"addCustomer()\">Add Customer</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    `\n})\nexport class FindCustomerComponent {\n\n  searchName: string = \"\";\n\n  constructor(private router: Router) {\n  }\n\n  goToCustomers() {\n    this.router.navigate([this.searchName !== \"\" ? \"/customers/\" + this.searchName : \"/customers\"]);\n  }\n\n  addCustomer() {\n    this.router.navigate([\"/new-customer\"]);\n  }\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: `home`,\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-center text-uppercase text-secondary mb-0\">Home !</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-center text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n              </div>\n            </div>\n            <img class=\"img-fluid\" src=\"assets/congrats.png\" alt=\"\">\n          </div>\n        </div>\n      </div>\n    </section>`\n})\nexport class HomeComponent {\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: `navbar`,\n  template: `\n    <nav class=\"navbar navbar-expand-lg bg-secondary fixed-top text-uppercase navbar-shrink\" id=\"mainNav\" role=\"navigation\">\n      <div class=\"container\">\n        <a class=\"navbar-brand js-scroll-trigger\" href=\"/containerbank/\"><span>Container Bank</span></a>\n        <div class=\"navbar-collapse collapse\" id=\"navbarResponsive\">\n          <ul class=\"navbar-nav ml-auto\">\n\n\n            <li class=\"nav-item mx-0 mx-lg-1\">\n              <a routerLink=\"/home\" title=\"home page\" routerLinkActive=\"active\"\n                 class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\">\n\n                Home\n\n              </a>\n            </li>\n\n\n            <li class=\"nav-item mx-0 mx-lg-1\">\n              <a routerLink=\"/find-customer\" title=\"find customer\" routerLinkActive=\"active\"\n                 class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\">\n\n                Find customer\n\n              </a>\n            </li>\n\n\n            <li class=\"nav-item mx-0 mx-lg-1\">\n              <a routerLink=\"/advisors\" title=\"advisors\"  routerLinkActive=\"active\"\n                 class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\">\n                Advisors\n\n              </a>\n            </li>\n\n\n            <li class=\"nav-item mx-0 mx-lg-1\">\n              <a routerLink=\"/error\" class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" routerLinkActive=\"active\"\n                 title=\"trigger a RuntimeException to see how it is handled\">\n                Error\n              </a>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    </nav>`\n})\nexport class NavbarComponent {\n\n}\n","import {Component} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Customer} from \"../model/Customer\";\nimport {Router} from \"@angular/router\";\nimport {domainName} from \"../domain-name\";\n\n@Component({\n  selector: `new-customer`,\n  template: `\n    <section class=\"portfolio\" id=\"portfolio\">\n      <div class=\"container\">\n        <h2 class=\"text-uppercase text-secondary mb-0\">New Customers</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n              <div class=\"portfolio-item-caption-content my-auto w-100 text-white\">\n                <i class=\"fas fa-search-plus fa-3x\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <div class=\"container-fluid\">\n      <div class=\"container xd-container\">\n        <form id=\"add-customer-form\" class=\"form-horizontal\">\n          <div class=\"form-group has-feedback\">\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">First Name</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"firstName\" name=\"firstName\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.firstName\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Last Name</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"lastName\" name=\"lastName\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.lastName\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Address</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"address\" name=\"address\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.address\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">City</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"city\" name=\"city\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.city\">\n\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group \">\n              <label class=\"col-sm-2 control-label\">Telephone</label>\n\n              <div class=\"col-sm-10\">\n                <input id=\"telephone\" name=\"telephone\" class=\"form-control\" type=\"text\" [(ngModel)]=\"client.telephone\">\n\n\n              </div>\n            </div>\n\n          </div>\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n              <button class=\"btn btn-default\" type=\"submit\" (click)=\"addCustomer()\">Add Customer</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>`\n})\nexport class NewCustomerComponent {\n\n  client: Customer;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.client = new Customer();\n\n  }\n\n  addCustomer() {\n    this.http.post(`${domainName}/api/customers/new`, this.client).subscribe(() => this.router.navigate(['/customers']));\n  }\n\n\n}\n","export const domainName = \"\"; // http://localhost:8090\";\n","import {Card} from \"./Card\";\n\nexport class Customer {\n\n  id: number;\n  firstName: string;\n  lastName: string;\n  address: string;\n  city: string;\n  telephone: string;\n  cards: Array<Card>;\n\n  constructor(id?: number, firstName?: string, lastName?: string, address?: string, city?: string, telephone?: string, cards?: Array<Card>) {\n    this.id = id;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.address = address;\n    this.city = city;\n    this.telephone = telephone;\n    this.cards = cards;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}